{"docstore/metadata": {"aec178a6-e8bb-4048-95a5-27f27fc7cf18": {"doc_hash": "87b4160cf3575d174a0ab88cffc6a8cc9d8503091a69de50c49497fdb9eb7430"}, "e6247435-365b-4ec8-9f66-83da6944be6f": {"doc_hash": "09bf84f2d458f95c79104ae333c43de08c318d1dd6e63b8707acf9117b8cd52e"}, "f4014de2-1305-4906-b2b1-a781c61b940b": {"doc_hash": "c447391b8dc2714570e7a23960419dc31afedb0dd67b1c7594cf199d02a16dab"}, "bf8cf5bb-1147-4dc1-a4e2-729226751868": {"doc_hash": "8b5fd39f7f94a13b506c1070e4c01e4b0fda5a773d0e3d8cd83d5c3a47619528"}, "f8d41cee-b040-4c15-954f-cff1d0bcb064": {"doc_hash": "b881d854a71c10cd45c4a7a97da3a9005d8667bbf3ded385272b06db13891b4e"}, "e7a4c4cf-078e-4f99-84b9-ca8fb9c90d89": {"doc_hash": "8d978c488a4b74dd5db2f587ece6abbe1c2e5f9da7dc41b36fc4b084cc9e175e"}, "1068be87-1fff-4556-8c6b-9ed9fd31dd5e": {"doc_hash": "6e9d8d6034e81083381c3725109b35e34e049709d6065868aa1d72d83ce7b3cd"}, "90c42d7b-1654-4b2d-9236-2c561115a057": {"doc_hash": "07037f22a5fa3d7ae84eae2b71021d13dca2f0a838de7cafca4956a476d18ef1"}, "a0ac9ef0-83eb-49c0-a74e-ca0963e660ae": {"doc_hash": "6db12cfdba4c94569a296762202a0d4a9ec297db85e0f7685a0256e965da6be3"}, "51cdda67-f948-4941-99cf-002e250f4d29": {"doc_hash": "4228fc6c86de543877bf03330a958cecb70b27eaea8bbb814503ff4d3829d60c"}, "274122a3-2c4f-4b37-8063-7784e2418982": {"doc_hash": "534706e7df2fe6e02d55864929b6e0b4960a3b97339681670d8a38c177243587"}, "44990030-68bc-4f9d-9473-7fc50606ebb1": {"doc_hash": "d17d9614dece5a52b5282c5ce24684b0e50368509319283c94e07063f8278a62"}, "c362063a-12e3-47e5-8d0f-3cabca33c056": {"doc_hash": "49e9e1dcc1129f7d7ad3f339bc1b0a318fe3476bdbfb5f6858b440e2e608dee8"}, "7862d95c-ce7b-4db9-95fa-8bb0e0786131": {"doc_hash": "9e092b152c6ef3b39ca3f2be59ba4912527996aaa636b7a847778b9c25eb332b", "ref_doc_id": "aec178a6-e8bb-4048-95a5-27f27fc7cf18"}, "dea8a21d-1049-4241-ae17-5b19fcec98cd": {"doc_hash": "dfda17cf381890a46c037a39496e397ece713ce373fa439ba547b5478032daa6", "ref_doc_id": "e6247435-365b-4ec8-9f66-83da6944be6f"}, "a5311917-5a21-41df-a870-c60d924c4a5e": {"doc_hash": "0f5dd4501c7b7f5133b905a5bc27c78ccacdd4b5765a01685e379bf9ab3a2a7c", "ref_doc_id": "f4014de2-1305-4906-b2b1-a781c61b940b"}, "6005fced-3cea-4133-b26f-38461068a24c": {"doc_hash": "5cb59665cd99148bba50ca5cfe2b34467980f18a5607b7dcfe1c3a0da9bbae5b", "ref_doc_id": "bf8cf5bb-1147-4dc1-a4e2-729226751868"}, "622beda2-be8b-42f1-88e3-62a5c9e480dd": {"doc_hash": "2589d3643ca467782d1f0ceb6d45eeb4cf5be2268c91ab3a5719e1cb8f7e7c45", "ref_doc_id": "f8d41cee-b040-4c15-954f-cff1d0bcb064"}, "695c4982-c984-41bd-8599-236acaacdd63": {"doc_hash": "fe89901cabdd4caf7ba230d5a216ec68ad15a536017b0043ae47ebd3bdd1c436", "ref_doc_id": "e7a4c4cf-078e-4f99-84b9-ca8fb9c90d89"}, "16b22119-b080-43a9-b34f-e7de37a92b86": {"doc_hash": "1002f71e8a86d83066ab834340189433d3d7b777d0f8a23ec618848c89c29241", "ref_doc_id": "1068be87-1fff-4556-8c6b-9ed9fd31dd5e"}, "344f65a1-7b05-42f2-85f7-b92d6c40a28b": {"doc_hash": "49870cf6dae1e404adebc0f003a57f7de69d974085595cdc41ad3ce9441dce08", "ref_doc_id": "90c42d7b-1654-4b2d-9236-2c561115a057"}, "db2f0f9a-59ad-46f0-8e8c-ca0859e83a8a": {"doc_hash": "c560c804086e71ade212b15a5f81c45b5db9aac5ba0f9daf868529cc1e59b14b", "ref_doc_id": "a0ac9ef0-83eb-49c0-a74e-ca0963e660ae"}, "c5288504-2054-4c28-8cdc-ba0ed00b5bd9": {"doc_hash": "c8d8407053c4b1841d2844399029d1f6305a66336d332358f5a0574ef73f8ad8", "ref_doc_id": "51cdda67-f948-4941-99cf-002e250f4d29"}, "9cfc8c42-e01b-411e-9264-148ca747945a": {"doc_hash": "8f5b5ddaf1e5220d4a2f0e8d066e21b4b06c091ea4b3abf0c5da9fa07d29d177", "ref_doc_id": "274122a3-2c4f-4b37-8063-7784e2418982"}, "83130c5b-bccf-4d2d-96d8-58e41a4a6a3e": {"doc_hash": "b85939efae8c51fa45516866f1d28c32d14984d0d1fd7be295a5959aaab5e656", "ref_doc_id": "44990030-68bc-4f9d-9473-7fc50606ebb1"}, "04aacc20-055b-4eea-950b-73b7ea99669d": {"doc_hash": "7904740731e751da745507b9ebaf2d91adf2920e79bbd94e722b47231f1ae1a5", "ref_doc_id": "c362063a-12e3-47e5-8d0f-3cabca33c056"}}, "docstore/data": {"7862d95c-ce7b-4db9-95fa-8bb0e0786131": {"__data__": {"id_": "7862d95c-ce7b-4db9-95fa-8bb0e0786131", "embedding": null, "metadata": {"page_label": "1", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aec178a6-e8bb-4048-95a5-27f27fc7cf18", "node_type": "4", "metadata": {"page_label": "1", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "87b4160cf3575d174a0ab88cffc6a8cc9d8503091a69de50c49497fdb9eb7430", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Emerging Technologies (Full Stack) \nUnit 1 Founda\u019fons of Full Stack Development \nQ. Give any two di\ufb00erence between applica\u019fon and websites. \n\uf0e0 Website \u2013 It has sta\u019fc content, with the main focus of informing the user about the \nbusiness vision/ products/ bene\ufb01ts. The website doesn\u2019t require user authen\u019fca\u019fon. A \nwebsites is a series of web pages that are typically accessed through a web browser and are \nhosted on a web server. \nWeb Applica\u019fon \u2013 It has dynamic content, designed speci\ufb01cally for informa\u019fon with the \nend-users. Most web applica\u019fons require user authen\u019fca\u019fon. A web applica\u019fon is a \nso\u014cware program that is accessed through a web browser and are hosted on a web server. \nQ. Why is UX Design Important? \n\uf0e0 It tries to ful\ufb01l the user\u2019s needs. UX measures how a consumer feels when interac\u019fng \nwith a system. \nQ. What is a UX Design Process? \n\uf0e0 User experience design is a process of enhancing user sa\u019fsfac\u019fon with a product by \nimproving the usability, accessibility, and pleasure provided in the interac\u019fon with the \nproduct. \nA UX design process is a process that starts with research and ends with a solu\u019fon. \nCon\u019fnuous process - research, prototyping, tes\u019fng, and re\ufb01ning. The \ufb01rst step in the design \nprocess is to conduct user research to iden\u019ffy the problem or opportunity to be addressed \nby the product or service. \nQ. List the di\ufb00erent ways which is used for component interac\u019fon. \n\uf0e0 Asking for data, taking an ac\u019fon synchronously, taking an ac\u019fon asynchronously \nQ. What is goal of modularity? \n\uf0e0 The goal of modularity is to par\u019f\u019fon the applica\u019fon in such a way that it remains \ufb02exible, \nmaintainable, and stable even as features and technologies are added and removed. \nQ. Explain system architecture in detail. \n\uf0e0 Two common types of system architectures : \u201cmonolithic\u201d and \u201cmicroservices\u201d. \nMonoliths can be easier to build ini\u019fally, but have the downside of becoming large and \ndi\ufb03cult to change if mul\u019fple teams work on the same codebase. Monolith is a single \ncodebase with a single applica\u019fon that performs all the func\u019fons of that system. \nMicroservices require a strong pla\u019eorm to grow from, but can be easier to adapt and change \nin the future. \nA microservice is a small service. It can be deployed and scaled independently of any other \npart of the system, and communicates through well-de\ufb01ned APIs. \n\u2022 To designing a system at the applica\u019fon level is to make each component as small as it \nneeds to be.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2443, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dea8a21d-1049-4241-ae17-5b19fcec98cd": {"__data__": {"id_": "dea8a21d-1049-4241-ae17-5b19fcec98cd", "embedding": null, "metadata": {"page_label": "2", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6247435-365b-4ec8-9f66-83da6944be6f", "node_type": "4", "metadata": {"page_label": "2", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "09bf84f2d458f95c79104ae333c43de08c318d1dd6e63b8707acf9117b8cd52e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Q. Explain the di\ufb00erent communica\u019fon type between component in a system. \n\uf0e0 1. Requests using HTTP: For reques\u019fng data or making synchronous changes, HTTP is a \nnatural \ufb01t, and a \npar\u019fcular type of HTTP interac\u019fon known as REST. HTTP GET can be used for reques\u019fng \ndata, and HTTP POST or PUT should be used for making changes. \n2. Message queues: For asynchronous ac\u019fons, where it doesn\u2019t ma\u01a9er to the user whether \nit succeeds or not. Message queues are a good \ufb01t. However, if the code is front-end code, it \nis o\u014cen easy to make a \ufb01re-and-forget XHR call (XMLH\u01a9pRequest, a browser API for making \nHTTP requests, and an important part of the asynchronous JavaScript and XML-AJAX \ntechnique). RESTful queries can be used to interact with jobs on a message queue. \n \nQ. Write short note on component interac\u019fons? \n\uf0e0 Rela\u019fonships between the components. How they communicate. The di\ufb00erent scenarios \nthrough which a user may come to use the system, and the paths and work\ufb02ows a user takes \nto accomplish their goals. These are called user journeys, and it\u2019s useful to iden\u019ffy which \nfront-end component is used. Determine the nature of that interac\u019fon. \n \nQ. Explain in detail three di\ufb00erent pa\u01a9erns used for communica\u019fon in between modules. \n\uf0e0 Modules should have low coupling between each other, it is common for modules to \ncommunicate with each other. There are several loosely coupled communica\u019fon pa\u01a9erns, \neach with their own strengths.  \nThe following are some of these pa\u01a9erns: \nLoosely coupled events - A module can broadcast that a certain event has occurred. Other \nmodules can subscribe to those events so they will be no\u019f\ufb01ed when the event occurs. A \ndesign that relies too heavily on events can become hard to maintain, especially if many \nevents have to be orchestrated together to ful\ufb01ll a single task. In that case, it might be be\u01a9er \nto consider a shared service. \nShared services -  A shared service is a class that can be accessed through a common \ninterface. shared services are found in a shared assembly and provide system-wide services, \nsuch as authen\u019fca\u019fon, logging, or con\ufb01gura\u019fon. \nShared resources -  If you do not want modules to directly communicate with each other, \nyou can also have them communicate indirectly through a shared resource, such as a \ndatabase or a set of web services. \n \nQ. Di\ufb00eren\u019fate between applica\u019fon and module. \n\uf0e0 An applica\u019fon is a so\u014cware program that's designed to perform a speci\ufb01c func\u019fon \ndirectly for the user or, in some cases, for another applica\u019fon program. Which means that \nan app can contain many modules. \nA module is a so\u014cware component, and an API is instruc\u019fons, and possibly some tools, for \nusing and communica\u019fng with a so\u014cware component.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2713, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a5311917-5a21-41df-a870-c60d924c4a5e": {"__data__": {"id_": "a5311917-5a21-41df-a870-c60d924c4a5e", "embedding": null, "metadata": {"page_label": "3", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4014de2-1305-4906-b2b1-a781c61b940b", "node_type": "4", "metadata": {"page_label": "3", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "c447391b8dc2714570e7a23960419dc31afedb0dd67b1c7594cf199d02a16dab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Unit 2 Front End \nQ. Give the advantages of Bootstrap. \n\uf0e0 Easy to use, Responsive features, Mobile-\ufb01rst approach, Browser compa\u019fbility. \nQ. Why do we need to use Bootstrap? \n\uf0e0 Free front-end framework for faster and easier web development. \nQ. List some features of Bootstrap. \n\uf0e0 Grid system, Browser compa\u019fbility, Responsive features, Topography, Customizable, \njQuery support \nQ. What is a Bootstrap Container? & Compare and contrast container and container-\ufb02uid. \n\uf0e0 A Bootstrap container is a basic layout element that's used to contain, pad, and align \ncontent within it. Containers are required when using Bootstrap's default grid system.  \nThe .container class provides a responsive \ufb01xed width container \nThe .container-\ufb02uid class provides a full width container, spanning the en\u019fre width of the \nviewport \nQ. What is Bootstrap Grid System? \n\uf0e0 1. Rows must be placed within a .container (\ufb01xed-width) or .container-\ufb02uid (full-width) \nfor proper alignment and padding \n2. Use rows to create horizontal groups of columns \n3. Content should be placed within columns, and only columns may be immediate children \nof rows \n4. Prede\ufb01ned classes like .row and .col-sm-4 are available for quickly making grid layouts \n5. Grid columns are created by specifying the number of 12 available columns you wish to \nspan. For example, three equal columns would use three .col-sm-4 \nQ. Discuss Bootstrap table and various classes that can change the appearance of the \ntable. \n\uf0e0 The .table class adds basic styling to a table. \n\u2022 Striped Rows : The .table-striped class adds zebra-stripes to a table. <table class=\"table \ntable-striped\"> \n\u2022 Bordered Table : The .table-bordered class adds borders on all sides of the table and cells. \n<table class=\"table table-bordered\"> \n\u2022 Hover Rows : The .table-hover class adds a hover e\ufb00ect (grey background color) on table \nrows <table class=\"table table-hover\"> \n\u2022 Contextual Classes: Contextual classes can be used to color table rows or table cells. The \nclasses that can be used are: .ac\u019fve, .success, .info, .warning, and .danger. \nQ. What is Bu\u01a9on group and which class is used for basic bu\u01a9on group? \n\uf0e0 Bootstrap allows you to group a series of bu\u01a9ons together (on a single line) in a bu\u01a9on \ngroup. Use a <div> element with class .btn-group to create a bu\u01a9on group. \nVer\u019fcal Bu\u01a9on Groups - Use the class .btn-group-ver\u019fcal to create a ver\u019fcal bu\u01a9on group \nJus\u019f\ufb01ed Bu\u01a9on Groups - To span the en\u019fre width of the screen, use the .btn-group-jus\u019f\ufb01ed \nclass <div class=\"btn-group btn-group-jus\u019f\ufb01ed\">", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2527, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6005fced-3cea-4133-b26f-38461068a24c": {"__data__": {"id_": "6005fced-3cea-4133-b26f-38461068a24c", "embedding": null, "metadata": {"page_label": "4", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bf8cf5bb-1147-4dc1-a4e2-729226751868", "node_type": "4", "metadata": {"page_label": "4", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "8b5fd39f7f94a13b506c1070e4c01e4b0fda5a773d0e3d8cd83d5c3a47619528", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Q. What are bootstrap alerts and how will you create them? \n\uf0e0 Bootstrap alerts are contextual feedback messages that provide informa\u019fon for user \nac\u019fons. Bootstrap provides an easy way to create prede\ufb01ned alert messages. Alerts are \ncreated with the .alert class, followed by one of the four contextual classes .alert-success, \n.alert-info, .alert-warning or .alert-danger \n<div class=\"alert alert-success alert-dismissible\"> \nQ. Explain the uses of carousel plugin in Bootstrap. \n\uf0e0 Carousel allows to navigate through a collec\u019fon of images in a sequen\u019fal fashion, moving \nto the previous/next one through the arrows on the sides. The carousel is a slideshow for \ncycling through a series of content, built with CSS 3D transforms and a bit of JavaScript. It \nworks with a series of images, text, or custom markup. \nQ. How can you create Nav elements in Bootstrap? \n\uf0e0 A standard naviga\u019fon bar is created with <nav class=\"navbar navbar-default\">. \nQ. What are grid classes in Bootstrap? \n\uf0e0 1 .col- (extra small devices - screen width less than 576px) \n2. .col-sm- (small devices - screen width equal to or greater than 576px) \n3. .col-md- (medium devices - screen width equal to or greater than 768px) \n4. .col-lg- (large devices - screen width equal to or greater than 992px) \n5. .col-xl- (xlarge devices - screen width equal to or greater than 1200px) \nQ. Why accessibility is important in web design? \n\uf0e0 Accessibility is o\u014cen used to talk about assis\u019fve technologies (AT), like screen readers; or \nlarger font size; or considera\u019fons speci\ufb01cally for people who have disabili\u019fes; If the text is \ntoo small, or if there is poor color contrast (for example, a light gray on white), then it can \nbe hard \nQ. Discuss accessibility in UI. \n\uf0e0 Avoiding Common Mistakes in UI : 1. Hover and Focus Styling, 2. The Order of Headings, \n3. Mul\u019fple h1s, 4. Skip Links, 5. Bu\u01a9ons vs Anchors, 6. The Correct Use of an alt A\u01a9ribute. \nQ. Explain AngularJS MVC architecture in detail. \n\uf0e0 MVC stands for Model View Controller. It is a so\u014cware design pa\u01a9ern for developing web \napplica\u019fons. It is very popular because it isolates the applica\u019fon logic from the user \ninterface layer and supports separa\u019fon of concerns. The MVC pa\u01a9ern is made up of the \nfollowing three parts: 1. Model: It is responsible for managing applica\u019fon data. It responds \nto the requests from view and to the instruc\u019fons from controller to update itself. \n2. View: It is responsible for displaying all data or only a por\u019fon of data to the users. It also \nspeci\ufb01es the data in a par\u019fcular format triggered by the controller's decision to present the \ndata. They are script-based template systems such as JSP , ASP , PHP and very easy to integrate \nwith AJAX technology. 3. Controller: It is responsible to control the rela\u019fon between models \nand views. It responds to user input and performs interac\u019fons on the data model objects. \nThe controller receives input, validates it, and then performs business opera\u019fons that \nmodify the state of the data model.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3007, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "622beda2-be8b-42f1-88e3-62a5c9e480dd": {"__data__": {"id_": "622beda2-be8b-42f1-88e3-62a5c9e480dd", "embedding": null, "metadata": {"page_label": "5", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f8d41cee-b040-4c15-954f-cff1d0bcb064", "node_type": "4", "metadata": {"page_label": "5", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "b881d854a71c10cd45c4a7a97da3a9005d8667bbf3ded385272b06db13891b4e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Unit 3 Middleware \nQ. What is Middleware? \n\uf0e0 A middleware component serves as a bridge between frontend and backend. \nMiddleware is so\u014cware that provides a bridge between opera\u019fng systems and the \napplica\u019fons that run on them, behaving as a discrete transi\u019fon layer. \nmiddleware acts as the \u201cmiddleman,\u201d facilita\u019fng communica\u019fon, bridging the gaps \nbetween tools, databases, and applica\u019fons, and ul\u019fmately providing uni\ufb01ed services to \nend-users. \nMiddleware is so\u014cware that di\ufb00erent applica\u019fons use to communicate with each other. \nQ. Why middleware is important? \n\uf0e0 Developers use middleware to support applica\u019fon development and simplify design \nprocesses. \nThis leaves them free to focus on business logic and features instead of connec\u019fvity \nbetween di\ufb00erent so\u014cware components. \nWithout middleware, developers would have to build a data exchange module for each \nso\u014cware component that connects to the applica\u019fon. \nQ. Discuss the di\ufb00erent factors consider in middleware pla\u019eorm. \n\uf0e0 1. Company support, 2. Connectors, 3. Costs, 4. Expansion ability, 5. Flexibility, 6. \nFunc\u019fonality, 7. Usability \nQ. How middleware works? \n\uf0e0 \u2022 Android users depends on middleware every \u019fme they use any phone applica\u019fon. The \nAndroid opera\u019fng system is built on a modi\ufb01ed Linux kernel, so developers need to build \nthe applica\u019fon with the need to communicate with Linux in mind. \n\u2022 Linux needs to communicate with an app, but it needs to use the Android OS as \nmiddleware in order to successfully do so. see, the request from the applica\u019fon needs to \ncommunicate with the back end. \n\u2022 In order to do that, the Android opera\u019fng system will: 1. Send the request back, 2. Receive \nthe data in response, 3. Transform the data for the applica\u019fon. \nQ. What is Object Request Broker middleware? \n\uf0e0 In distributed compu\u019fng, an object request broker (ORB) is a middleware, which allows \nprogram calls to be made from one computer to another via a computer network, providing \nloca\u019fon transparency through remote procedure c", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2003, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "695c4982-c984-41bd-8599-236acaacdd63": {"__data__": {"id_": "695c4982-c984-41bd-8599-236acaacdd63", "embedding": null, "metadata": {"page_label": "6", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e7a4c4cf-078e-4f99-84b9-ca8fb9c90d89", "node_type": "4", "metadata": {"page_label": "6", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "8d978c488a4b74dd5db2f587ece6abbe1c2e5f9da7dc41b36fc4b084cc9e175e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Q. Explain the types of middleware in details. \n\uf0e0 1. Message-Oriented Middleware - This middleware infrastructure supports message \nreceiving and sending over distributed applica\u019fons. It translates and transforms messages \nbetween applica\u019fons and routs them, so they arrive at the correct components and in the \nproper order. Which is an infrastructure that allows communica\u019fon and exchanges the data \n(messages). It involves the passing of data between applica\u019fons using a communica\u019fon \nchannel that carries self-contained units of informa\u019fon (messages).In a MOM-based \ncommunica\u019fon environment, messages are sent and received asynchronously. \n2. Object Middleware - Object middleware, also called an object request broker, gives \napplica\u019fons the ability to send objects and request services via an object oriented system. \nIn short, it manages the communica\u019fon between objects. It is run\u019fme so\u014cware that enables \nobjects (components) to work coopera\u019fvely with a container program or another object, \neven if the so\u014cware is distributed across mul\u019fple computers. \n3. Remote Procedure Call (RPC) Middleware - It calls procedures on remote systems and is \nused to perform synchronous or asynchronous interac\u019fons between applica\u019fons or \nsystems. It is usually u\u019flized within a so\u014cware applica\u019fon. RPC is used to call other \nprocesses on the remote systems like a local system. \n4. API Middleware - An API is middleware so\u014cware that communicates informa\u019fon \nbetween a front end and a back end. A common area that people will \ufb01nd APIs \u2014the back-\nend only communicates with the APIs, which then run the data to the front-end. This allows \nweb services to be completely customizable, instead \nof being locked into a rigid, monolithic provision. API middleware enables developers to \ncreate and manage their applica\u019fon's APIs. \n \n                                         Fig. Backend for front-end", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1889, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16b22119-b080-43a9-b34f-e7de37a92b86": {"__data__": {"id_": "16b22119-b080-43a9-b34f-e7de37a92b86", "embedding": null, "metadata": {"page_label": "7", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "1068be87-1fff-4556-8c6b-9ed9fd31dd5e", "node_type": "4", "metadata": {"page_label": "7", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "6e9d8d6034e81083381c3725109b35e34e049709d6065868aa1d72d83ce7b3cd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Unit 4 APIs \nQ. What is API? And responsibili\u019fes of API \n\uf0e0 APIs operate through requests and responses with endpoints. When an API requests data \nfrom an app or server, an endpoint sends back a response. This helps the API get the \nresources it needs from a server to perform a task. \nAPIs exist for di\ufb00erent parts of your system, and parts outside of it, to communicate. \nAPIs can be thought of as the user experience for other applica\u019fons, in that they must be \ndesigned to be usable and to ease integra\u019fons. \nCreate and maintain API client libraries to provide an easy-to-use interface for third-party \ndevelopers \nTrack API performance metrics and work to improve the stability, scalability, and availability \nof the APIs. \nIf API is handling both server-to-server authen\u019fca\u019fon and this typical user authen\u019fca\u019fon, \nit can cause complexity, and complexity leads to bugs. \nQ. Explain the concept of \u201cBackend for frontend\u201d pa\u01a9ern. \n\uf0e0 Instead, what we could do is introduce layering to APIs. One such set of layers is a rich \nbackend API, and an API that allows front-end UIs to communicate back to a server .This layer \nis a concept called \u201cbackends for frontends.\u201d In this, our product API is locked, so it\u2019s only \navailable for server-to-server communica\u019fon (this can be done by requiring an API key or \nsome other secret that isn\u2019t exposed to users, or by implemen\u019fng a \ufb01rewall at a network \nlevel). We then have a \u201cbackend-for-frontend\u201d API layer, which is o\u014cen the same applica\u019fon \nthat serves the original HTML for the page. This API simply exposes a set of AJAX endpoints \nthat the front end can use to query the back end. \nQ. What is an API key? \n\uf0e0 An API key is a unique iden\u019f\ufb01er used to authen\u019fcate calls to an API. The key is made up \nof a string of le\u01a9ers and numbers that iden\u019ffy the client. (Remember, this is the applica\u019fon \nor site making the request.) The key can grant or deny that request based on the client\u2019s \naccess permissions. The key also tracks the number of requests made for usage and billing \npurposes. \nQ. Give any 5 API best prac\u019fces for API security. \n\uf0e01. Implement authen\u019fca\u019fon and authoriza\u019fon, 2. Use SSL/TLS encryp\u019fon, 3. Use audi\u019fng \nand logging. \n4. Restrict access to sensi\u019fve data, 5. Monitor and alert on anomalous ac\u019fvity, 6. Update \nregularly and patch vulnerabili\u019fes quickly, 7. Use API gateways, 8. Secure storage and \nencryp\u019fon of data at rest, 9. API Security Tes\u019fng \nQ. What is an event based API? \n\uf0e0 RESTful APIs are useful when user want to discover or change the state of an external \nsystem, but some\u019fmes applica\u019fon needs to know when a change has occurred and behave \nappropriately. Event-driven APIs enable real-\u019fme data processing, enabling systems to \nrespond to events instantly.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2737, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "344f65a1-7b05-42f2-85f7-b92d6c40a28b": {"__data__": {"id_": "344f65a1-7b05-42f2-85f7-b92d6c40a28b", "embedding": null, "metadata": {"page_label": "8", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "90c42d7b-1654-4b2d-9236-2c561115a057", "node_type": "4", "metadata": {"page_label": "8", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "07037f22a5fa3d7ae84eae2b71021d13dca2f0a838de7cafca4956a476d18ef1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Q. Explain the bene\ufb01ts of Event based API. \n\uf0e0 Scalability: Event-driven APIs allow systems to scale horizontally, as events can be \nprocessed by mul\u019fple subscribers in parallel. This makes it easier to handle high volumes of \nrequests. \nReal-\u019fme data: Event-driven APIs enable real-\u019fme data processing, enabling systems to \nrespond to events instantly, instead of having to repeatedly poll for updates \nDecoupled systems: Event-driven APIs promote decoupled systems, as they allow for loose \ncoupling between systems. This means that systems can evolve independently, and changes \nin one system don\u2019t necessarily impact the other. \nFlexibility: Event-driven APIs allow for more \ufb02exible and dynamic data \ufb02ow between \nsystems, as events can be generated and processed by di\ufb00erent systems, at di\ufb00erent \u019fmes, \nin di\ufb00erent ways. \nQ. What is the purpose of API discovery? \n\uf0e0 API discovery refers to de\ufb01ning innova\u019fons and capabili\u019fes when it's used in internal \nprogramming. It plays a key role in ensuring e\ufb00ec\u019fve API development done for applica\u019fons \ngran\u019fng access to third-party resources and applica\u019fons. \nQ. Why API discovery is important? \n\uf0e0 API discovery is important because it helps developers to quickly \ufb01nd their APIs, \nespecially those best suited for use in their apps or websites. \nIt also helps them to mi\u019fgate risks by uncovering hidden vulnerabili\u019fes, like shadow APIs \nthat are u\u019flizing sensi\u019fve data like credit card info, social security numbers, and other \npersonally iden\u019f\ufb01able informa\u019fon. \nAPI discovery allows developers to \ufb01nd pre-exis\u019fng and pre-built func\u019fonali\u019fes and services \nto easily integrate into their applica\u019fons. This allows developers to save \u019fme and e\ufb00ort and \naccelerate the development cycle, thereby reducing the product\u2019s \u019fme to market. \nQ. What is cURL? \n\uf0e0 The manual approach is the most common way of discovering APIs. The manual approach \ninvolves searching for APIs on the internet and then using tools like cURL to make API calls. \nThis process has been around for a long \u019fme and can take a lot of \u019fme and e\ufb00ort. \nQ. Explain working of API. \n\uf0e0 Third-party payment processing. When a user purchases a product on an ecommerce \nsite, they may be prompted to \u201cPay with phonepay\u201d or another type of third-party system. \nThis func\u019fon relies on APIs to make the connec\u019fon. \n\u2022 When the buyer clicks the payment bu\u01a9on, an API calls to retrieve informa\u019fon\u2014also \nknown as a request. This request is processed from an applica\u019fon to the web server via the \nAPI\u2019s Uniform Resource Iden\u019f\ufb01er (URI) and includes a request body. \n\u2022 A\u014cer receiving a valid request from the product webpage, the API makes a call to the \nexternal program or web server, in this case, the third-party payment system. \n\u2022 The server sends a response to the API with the requested informa\u019fon. \n\u2022 The API transfers the data to the ini\u019fal reques\u019fng applica\u019fon, here the product website.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2886, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "db2f0f9a-59ad-46f0-8e8c-ca0859e83a8a": {"__data__": {"id_": "db2f0f9a-59ad-46f0-8e8c-ca0859e83a8a", "embedding": null, "metadata": {"page_label": "9", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a0ac9ef0-83eb-49c0-a74e-ca0963e660ae", "node_type": "4", "metadata": {"page_label": "9", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "6db12cfdba4c94569a296762202a0d4a9ec297db85e0f7685a0256e965da6be3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Unit 5 Security  \nQ. What is Phreaking? \n\uf0e0 Phreaking is a form of hacking that targets the telephone system. It is the prac\u019fce of \nmanipula\u019fng or hacking into the telephone system to make free or unauthorized calls. As \nwith valida\u019fon, sani\u019fza\u019fon does not only apply when dealing with displaying informa\u019fon \nto the user. Any data that leaves the system should be sani\u019fzed. \nQ. Explain any four Golden Rules of API Security? \n\uf0e0 1. Robust Authoriza\u019fon Mechanism - The authoriza\u019fon mechanism controls the \nresources and provides access only to users who have the right to access them. Some of the \nmi\u019fga\u019fon techniques for preven\u019fng authoriza\u019fon vulnerabili\u019fes : de\ufb01ne user policies to \nimplement authoriza\u019fon techniques, use random values for GUIDs \n2. Never Trust Client Input (Input Valida\u019fon) - Implemen\u019fng proper input valida\u019fon \nensures the mi\u019fga\u019fon of Injec\u019fon vulnerabili\u019fes. Always sani\u019fze the input whenever an \napplica\u019fon requires input from a user. Also, ensure no input is directly fed into queries like \nSQL etc. \n3. Logging Each Security Event - If logs are analyzed properly in real-\u019fme, 99 percent of \nsecurity breaches may be avoided. Some of the mi\u019fga\u019fon techniques for preven\u019fng big \nsecurity incidents: It is highly recommended to integrate Security Informa\u019fon and Event \nManagement (SIEM) system to analyze logs produce from the API system. De\ufb01ne rules and \ncon\ufb01gure alerts, so that any anomaly or suspicious ac\u019fvi\u019fes can be iden\u019f\ufb01ed \nearly. \n4. Use SSL/TLS - Always use encrypted layer transport while communica\u019fng data. Use the \nlatest SSL/TLS protocol to secure in-transit data. \n5. Authen\u019fca\u019fon Mechanism - Authen\u019fca\u019fon veri\ufb01es the creden\u019fals of a user and checks \nwhether the user has an authen\u019fca\u019fon right. \nAuthen\u019fca\u019fon endpoints are the favorite spots of malicious actors as it is easily available \nand most rewarded if breached. \nQ. What is Microso\u014c STRIDE? & Explain STRIDE model. \n\uf0e0 STRIDE is a model for iden\u019ffying computer security threats developed by Praerit Garg \nand Loren Kohnfelder at Microso\u014c. It provides a mnemonic for security threats in di\ufb00erent \ncategories like Spoo\ufb01ng, Tampering, Repudia\u019fon, Informa\u019fon Disclosure, Denial of Service \n(DoS) etc. \n1. Spoo\ufb01ng iden\u019fty - where a user can somehow impersonate another user or log in as \nanother user to take on their characteris\u019fcs.In other words,Iden\u019fty spoo\ufb01ng occurs when a \nscammer assumes the iden\u019fty of another person/en\u019fty and uses that iden\u019fty to commit \nfraud. \n2. Tampering with data \u2013 Where a user can manipulate data that they should not have \naccess to (o\u014cen caused by valida\u019fon failures). \n3. Repudia\u019fon \u2013 where an ac\u019fon cannot be reliably traced back to a user. In which an \na\u01a9acker a\u01a9empts to deny or repudiate ac\u019fons that they have taken, such as making a \ntransac\u019fon or sending a message. These a\u01a9acks can be a serious problem because they can \nmake it di\ufb03cult to track down the source of the a\u01a9ack or \ndetermine who is responsible for a par\u019fcular ac\u019fon.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2961, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c5288504-2054-4c28-8cdc-ba0ed00b5bd9": {"__data__": {"id_": "c5288504-2054-4c28-8cdc-ba0ed00b5bd9", "embedding": null, "metadata": {"page_label": "10", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "51cdda67-f948-4941-99cf-002e250f4d29", "node_type": "4", "metadata": {"page_label": "10", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "4228fc6c86de543877bf03330a958cecb70b27eaea8bbb814503ff4d3829d60c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "4. Informa\u019fon disclosure \u2013 It means releasing or making the informa\u019fon available to \nanother person or organiza\u019fon. when informa\u019fon that should be private is revealed to \nsomeone who should not have access to that data. \n5. Denial of service \u2013 A Denial-of-Service (DoS) a\u01a9ack is a malicious, targeted a\u01a9ack that \n\ufb02oods a network with false requests in order to disrupt business opera\u019fons. \n6. Eleva\u019fon of privilege \u2013 if di\ufb00erent users have di\ufb00erent layers of privilege (for example, \nadministrator and non-administrator roles),then the applica\u019fon should ensure that a \nlogged-in user cannot get access to any more func\u019fonality than they should have access to, \nby doing authoriza\u019fon checks. \n \nUnit 7 Deployment  \nQ. Explain the terms: Build,Release and Run \n\uf0e0 1. Build : Convert your source code into something that can actually run. This could \ninvolve installing any dependencies, or conver\u019fng any front-end SASS into the \ufb01nal CSS. \n2. Release : Which gives us a dis\u019fnct version number and ID for the build. It is common for \ncon\ufb01gura\u019fon to be added here as well, so changing the con\ufb01gura\u019fon involves re-releasing \nthe build (but not rebuilding it). \n3. Run : Put a release (build + con\ufb01g) in an environment so that it actually starts and does \nwhatever it needs to do. \nQ. Explain Con\u019fnuous delivery and Con\u019fnuous deployment. \n\uf0e0 Con\u019fnuous delivery is a set of engineering principles that aims to reduce the \u019fme an \norganiza\u019fon takes to make a change to so\u014cware. \nCon\u019fnuous deployment is a technique where every change is automa\u019fcally deployed from \ndevelopment into live. \nQ. Give the steps for Moving Code into Produc\u019fon. \n\uf0e0 1. Choosing the right tools \n2. De\ufb01ning a release strategy \n3. Integra\u019fon with CI/CD pipelines \n4. Implemen\u019fng automa\u019fon for deployment \nQ. What is immutable infrastructure? \n\uf0e0 Immutable infrastructure is a model in which no updates, security patches, or \ncon\ufb01gura\u019fon changes happen in-place on produc\u019fon systems. If any change is needed, a \nnew version of the architecture is built and deployed into produc\u019fon. Immutable \ninfrastructure refers to servers (or VMs) that are never modi\ufb01ed a\u014cer deployment. With an \nimmutable infrastructure paradigm, servers work di\ufb00erently. \nPopular immutable infrastructure tools \u2013 Docker, Kubernetes, Spinnaker, AWS, GCP", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2285, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9cfc8c42-e01b-411e-9264-148ca747945a": {"__data__": {"id_": "9cfc8c42-e01b-411e-9264-148ca747945a", "embedding": null, "metadata": {"page_label": "11", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "274122a3-2c4f-4b37-8063-7784e2418982", "node_type": "4", "metadata": {"page_label": "11", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "534706e7df2fe6e02d55864929b6e0b4960a3b97339681670d8a38c177243587", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Unit 6 Python Frameworks \nQ. Give advantages of Python frameworks. \n\uf0e0 Easier implementa\u019fon, Good documenta\u019fon, E\ufb03cient opera\u019fons, Secure framework, \nOpen-source, Code reusability, Easy integra\u019fon. \nQ. List any three frameworks in python. \n\uf0e0 Django, Flask, Streamlit, Web2Py, CherryPy \nQ. What is the meaning of if __ name __ == __ main __ in Python? \n\uf0e0 We use the if-statement to run blocks of code only if our program is the main program \nexecuted. \nQ. List any 4 four bene\ufb01ts of URL building. \n\uf0e0 1. It avoids hard coding of the URLs. \n2. We can change the URLs dynamically instead of remembering the manually changed hard-\ncoded URLs. \n3. URL building handles the escaping of special characters and Unicode data transparently. \n4. The generated paths are always absolute, avoiding unexpected behavior of rela\u019fve paths \nin browsers. \nQ. Give and explain a\u01a9ributes of request object in \ufb02ask. \n\uf0e0 1. Form - It is the dic\u019fonary object which contains the key-value pair of form parameters \nand their values. \n2. args - It is parsed from the URL. It is the part of the URL which is speci\ufb01ed in the URL a\u014cer \nques\u019fon mark (?). \n3. Cookies - It is the dic\u019fonary object containing cookie names and the values. It is saved at \nthe client-side to track the user session. \n4. Files - It contains the data related to the uploaded \ufb01le. \n5. Method - It is the current request method (get or post). \nQ. Explain di\ufb00erent HTTP methods in \ufb02ask. \n\uf0e0 GET: to request data from the server . \nPOST: to submit data to be processed to the server. \nPUT: A PUT request is used to modify the data on the server. It replaces the en\u019fre content \nat a par\u019fcular loca\u019fon with data that is passed in the body payload. If there are no resources \nthat match the request, it will generate one. \nPATCH: PATCH is similar to a PUT request, but the only di\ufb00erence is, it modi\ufb01es a part of the \ndata. It will only replace the content that you want to update. \nDELETE: A DELETE request is used to delete the data on the server at a speci\ufb01ed loca\u019fon. 20 \nQ. Describe abort() func\u019fon with di\ufb00erent status code in \ufb02ask. \n\uf0e0 Flask class has abort() func\u019fon with an error code. The abort() func\u019fon is used to handle \nthe cases where the errors are involved in the requests from the client side, such as bad \nrequests, unauthorized access and many more. However, the error code is to be men\u019foned \ndue to which the error occurred. \nThe syntax to use the abort() func\u019fon is given below - Flask.abort(code) \n400 : for bad requests, 401: for unauthorized access, 403: for forbidden, 404: for not found,  \n406: for not acceptable, 415: for unsupported media types, 429: for too many request", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2635, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "83130c5b-bccf-4d2d-96d8-58e41a4a6a3e": {"__data__": {"id_": "83130c5b-bccf-4d2d-96d8-58e41a4a6a3e", "embedding": null, "metadata": {"page_label": "12", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "44990030-68bc-4f9d-9473-7fc50606ebb1", "node_type": "4", "metadata": {"page_label": "12", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "d17d9614dece5a52b5282c5ce24684b0e50368509319283c94e07063f8278a62", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Q. Write short note on cookies and session in \ufb02ask. \n\uf0e0 Cookies - The cookies are stored in the form of text \ufb01les on the client's machine. Cookies \nare used to track the user's ac\u019fvi\u019fes on the web and re\ufb02ect some sugges\u019fons according to \nthe user's choices to enhance the \nuser's experience. In \ufb02ask, the cookies are associated with the Request object as the \ndic\u019fonary object of all the cookie variables and their values transmi\u01a9ed by the client. Flask \nfacilitates us to specify the expiry \u019fme, path, and the domain name of the website. \nresponse.setCookie(<\u019ftle>, <content>, <expiry \u019fme>) \nSessions - The session can be de\ufb01ned as the dura\u019fon for which a user logs into the server \nand logs out. The data which is used to track this session is stored into the temporary \ndirectory on the server. In the \ufb02ask, a session object is used to track the session data which \nis a dic\u019fonary object that contains a key-value pair of the session variables and their \nassociated values. The following syntax is used to set the session variable to a speci\ufb01c value \non the server. session[<variable-name>] = <value> \nQ. Give any four standard HTTP codes. \n\uf0e0 1. HTTP_300_MULTIPLE_CHOICES, 2.HTTP_301_MOVED_PERMANENTLY , 3. \nHTTP_302_FOUND \n4.HTTP_303_SEE_OTHER, 5. HTTP_304_NOT_MODIFIED \nQ. Write a program accept the input in URL and concatenate with return statement using \n\ufb02ask. \n\uf0e0  \nfrom \ufb02ask import Flask, request \napp = Flask(__name__) \n@app.route('/concatenate', methods=['GET']) \ndef concatenate(): \n    # Get the input parameter from the URL \n    user_input = request.args.get('input', default='', type=str)     \n    # Concatenate the input with the return statement \n    response = f\"Received input: {user_input}. Thank you for using our service!\"    \n    return response \nif __name__ == '__main__': \n    app.run(debug=True) \n \nQ. Write a program using \ufb02ask to display message \u201cWelcome to School of Computer \nScience\u201d. \n\uf0e0 \nfrom \ufb02ask import Flask \napp = Flask(__name__) \n@app.route('/') \ndef welcome(): \n    return \"Welcome to School of Computer Science\" \nif __name__ == '__main__': \n    app.run(debug=True)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2102, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "04aacc20-055b-4eea-950b-73b7ea99669d": {"__data__": {"id_": "04aacc20-055b-4eea-950b-73b7ea99669d", "embedding": null, "metadata": {"page_label": "13", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c362063a-12e3-47e5-8d0f-3cabca33c056", "node_type": "4", "metadata": {"page_label": "13", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}, "hash": "49e9e1dcc1129f7d7ad3f339bc1b0a318fe3476bdbfb5f6858b440e2e608dee8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Q. Write a program to implement app rou\u019fng, page redirec\u019fon and URL building using \n\ufb02ask. \n\uf0e0 \nfrom \ufb02ask import Flask, redirect, url_for \napp = Flask(__name__) \n# Home route \n@app.route('/') \ndef home(): \n    return \"Welcome to the Home Page!\" \n# About route \n@app.route('/about') \ndef about(): \n    return \"Welcome to the About Page!\" \n# Redirect route \n@app.route('/redirect_to_about') \ndef redirect_to_about(): \n    # Redirects to the 'about' route \n    return redirect(url_for('about')) \n# Pro\ufb01le route with dynamic URL building \n@app.route('/pro\ufb01le/<username>') \ndef pro\ufb01le(username): \n    return f\"Hello, {username}! Welcome to your pro\ufb01le.\" \n@app.route('/go_to_pro\ufb01le/<username>') \ndef go_to_pro\ufb01le(username): \n    # Builds the URL for the pro\ufb01le route dynamically \n    pro\ufb01le_url = url_for('pro\ufb01le', username=username) \n    return redirect(pro\ufb01le_url) \nif __name__ == '__main__': \n    app.run(debug=True) \n \nQ. Write a program using \ufb02ask to display message \u201cWelcome to School of Computer \nScience\u201d.(use template) \n\uf0e0  \nfrom \ufb02ask import * \napp = Flask(__name__) \n@app.route('/') \ndef customer(): \n        return \n        render_template('customer.html') \n@app.route('/success',methods = \n['POST', 'GET']) \ndef print_data(): \nif request.method == 'POST': \nResult = request.form \nreturn \nrender_template(\u201cresult_data.html\u201d,result=result) \nif __name__==\u2019__main__\u2019: \n app.run()", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1378, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"aec178a6-e8bb-4048-95a5-27f27fc7cf18": {"node_ids": ["7862d95c-ce7b-4db9-95fa-8bb0e0786131"], "metadata": {"page_label": "1", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "e6247435-365b-4ec8-9f66-83da6944be6f": {"node_ids": ["dea8a21d-1049-4241-ae17-5b19fcec98cd"], "metadata": {"page_label": "2", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "f4014de2-1305-4906-b2b1-a781c61b940b": {"node_ids": ["a5311917-5a21-41df-a870-c60d924c4a5e"], "metadata": {"page_label": "3", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "bf8cf5bb-1147-4dc1-a4e2-729226751868": {"node_ids": ["6005fced-3cea-4133-b26f-38461068a24c"], "metadata": {"page_label": "4", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "f8d41cee-b040-4c15-954f-cff1d0bcb064": {"node_ids": ["622beda2-be8b-42f1-88e3-62a5c9e480dd"], "metadata": {"page_label": "5", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "e7a4c4cf-078e-4f99-84b9-ca8fb9c90d89": {"node_ids": ["695c4982-c984-41bd-8599-236acaacdd63"], "metadata": {"page_label": "6", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "1068be87-1fff-4556-8c6b-9ed9fd31dd5e": {"node_ids": ["16b22119-b080-43a9-b34f-e7de37a92b86"], "metadata": {"page_label": "7", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "90c42d7b-1654-4b2d-9236-2c561115a057": {"node_ids": ["344f65a1-7b05-42f2-85f7-b92d6c40a28b"], "metadata": {"page_label": "8", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "a0ac9ef0-83eb-49c0-a74e-ca0963e660ae": {"node_ids": ["db2f0f9a-59ad-46f0-8e8c-ca0859e83a8a"], "metadata": {"page_label": "9", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "51cdda67-f948-4941-99cf-002e250f4d29": {"node_ids": ["c5288504-2054-4c28-8cdc-ba0ed00b5bd9"], "metadata": {"page_label": "10", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "274122a3-2c4f-4b37-8063-7784e2418982": {"node_ids": ["9cfc8c42-e01b-411e-9264-148ca747945a"], "metadata": {"page_label": "11", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "44990030-68bc-4f9d-9473-7fc50606ebb1": {"node_ids": ["83130c5b-bccf-4d2d-96d8-58e41a4a6a3e"], "metadata": {"page_label": "12", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}, "c362063a-12e3-47e5-8d0f-3cabca33c056": {"node_ids": ["04aacc20-055b-4eea-950b-73b7ea99669d"], "metadata": {"page_label": "13", "file_name": "FS IMP.pdf", "file_path": "C:\\Users\\SSK\\RAG_bot\\Data\\FS IMP.pdf", "file_type": "application/pdf", "file_size": 609571, "creation_date": "2025-02-15", "last_modified_date": "2024-11-26"}}}}